user  nginx;
worker_processes  4;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    client_max_body_size 8096m;
    charset utf-8;
    sendfile on;
    keepalive_timeout 65;
    types_hash_max_size 8048;
    gzip on;
    gzip_vary on;
    gzip_static on;
    gzip_min_length 1024;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types
        text/css
        text/javascript
        text/xml
        text/plain
        text/x-component
        application/javascript
        application/json
        application/xml
        application/rss+xml
        font/truetype
        font/opentype
        application/vnd.ms-fontobject
        image/svg+xml;
    gzip_disable "MSIE [1-6]\.";

    proxy_headers_hash_bucket_size 128;
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    proxy_cache_path /tmp/nginx_cache keys_zone=cache_zone:600m;

    resolver 127.0.0.1;

    server {
	listen 80;
	server_name localhost;
	server_tokens off;
	access_log /dev/stdout;
	error_log /dev/stdout;

	    location / {
	        rewrite ^/$ /index.html break;
	        rewrite ^/login/$ /login/index.html break;
	        rewrite ^/login$ /login/index.html break;
	        index index.html;
	        root /var/www/;
	        expires 1d;
	        try_files $uri /index.html;
	    }

	    location ~ ^/({{be_endpoints}}) {
	        proxy_pass      http://{{be_host}}:{{be_port}}$request_uri;
	        proxy_redirect off;
	        include /etc/nginx/proxy_params;
	    }

	    location ^~ /config/api/private {
	        return 404;
	    }
    }
    
    server{
        listen 19999;
        charset utf-8;
        server_name stats;
        server_tokens off;
        access_log off;
        error_log off;

        location / {
          stub_status on;
          access_log   off;
        }
    }
}
